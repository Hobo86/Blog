<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MySQL | Hobo Blog]]></title>
  <link href="http://blog.devhobo.com/blog/categories/mysql/atom.xml" rel="self"/>
  <link href="http://blog.devhobo.com/"/>
  <updated>2014-10-17T12:27:39+08:00</updated>
  <id>http://blog.devhobo.com/</id>
  <author>
    <name><![CDATA[Hobo]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MySql:优化工具]]></title>
    <link href="http://blog.devhobo.com/blog/2013/11/07/mysql-you-hua-gong-ju/"/>
    <updated>2013-11-07T18:36:00+08:00</updated>
    <id>http://blog.devhobo.com/blog/2013/11/07/mysql-you-hua-gong-ju</id>
    <content type="html"><![CDATA[<p>脚本优化tuning-primer.sh
{% codeblock lang:ruby %}</p>

<h1>cd /etc/   (my.conf所在目录)</h1>

<h1>wget <a href="http://www.day32.com/MySQL/tuning-primer.sh">http://www.day32.com/MySQL/tuning-primer.sh</a></h1>

<h1>chmod +x tuning-primer.sh</h1>

<h1>./tuning-primer.sh</h1>

<p>{% endcodeblock %}</p>

<p>优化工具Mysqltuner
{% codeblock lang:ruby %}
安装：</p>

<h1>yum install -y mysqltuner</h1>

<p>运行：</p>

<h1>mysqltuner</h1>

<p>{% endcodeblock %}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MySQL:常用命令行]]></title>
    <link href="http://blog.devhobo.com/blog/2013/10/30/mysql-chang-yong-ming-ling-xing/"/>
    <updated>2013-10-30T08:58:00+08:00</updated>
    <id>http://blog.devhobo.com/blog/2013/10/30/mysql-chang-yong-ming-ling-xing</id>
    <content type="html"><![CDATA[<p>登入
</br>mysql -h192.168.1.110  -uroot -ppassword</p>

<p>登出
</br>quit/exit</p>

<p>查看数据库
</br>show databases;</p>

<p>用户权限
</br>添加
</br>grant select on db.table to &lsquo;user&rsquo;@&lsquo;host&rsquo;;
</br>grant select,update on <em>.</em> to &lsquo;test&rsquo;@&lsquo;%&rsquo;;
</br>撤销
</br>revoke all on <em>.</em> from &lsquo;test&rsquo;@&lsquo;%&rsquo;;
</br>查看
</br>show grants;
</br>show grants for user@localhost</p>

<p>删除用户
</br>delete from mysql.user where user=&lsquo;&rsquo; and host=&lsquo;&rsquo;;</p>

<p>设置密码
</br>update mysql.user set password=PASSWORD(&lsquo;123456&rsquo;) where user=&lsquo;root&rsquo;;</p>

<p>配置远程连接
</br>GRANT ALL PRIVILEGES ON <em>.</em> TO &lsquo;root&rsquo;@&lsquo;%&rsquo; IDENTIFIED BY &lsquo;password&rsquo; WITH GRANT OPTION;</p>

<!--more-->


<p></p>

<p>导出<br/>
</br>mysqldump -u　用户名 -p 数据库名 > 数据库名.sql
{% codeblock lang:ruby %}
mysqldump -u　root -p dbname > filepath.sql</p>

<h1>To export tofile(data only)</h1>

<p>mysqldump -u [user]-p[pass]&mdash;no-create-db &mdash;no-create-info mydb > mydb.sql</p>

<h1>To export tofile(structure only)</h1>

<p>mysqldump -u [user]-p[pass]&mdash;no-data mydb > mydb.sql</p>

<h1>To import todatabase</h1>

<p>mysql -u [user]-p[pass] mydb &lt; mydb.sql
{% endcodeblock %}</p>

<p>导入
{% codeblock lang:ruby %}
mysql> use dbname             #切到要导入的数据库
mysql> source filepath.sql
{% endcodeblock %}</p>

<p>变量查看/修改
{% codeblock lang:ruby %}
show variables like &lsquo;%slow%&rsquo;;
set global slow_query_log= &lsquo;ON&rsquo;;</p>

<p>show status like &lsquo;Qca%&rsquo;;</p>

<h1>查看SQL中select条数</h1>

<p>show status like &lsquo;Com_sel%&rsquo;; #显示的是一次会话的值！
show global status like &ldquo;Com_select&rdquo;;
{% endcodeblock %}</p>

<p>找回密码？
</br>1、kill -TERM mysqld
</br>2、conf中加入skip-grant-tables
</br>3、service mysqld restart
</br>4、mysql -uroot -p
</br>5、修改密码
</br>6、改回原配置并重启</p>

<p>Binlog：<a href="http://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html">http://dev.mysql.com/doc/refman/5.7/en/mysqlbinlog.html</a>
</br>删除mysql-bin日志
</br><a href="http://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html">http://dev.mysql.com/doc/refman/5.7/en/purge-binary-logs.html</a>
</br>PURGE BINARY LOGS TO &lsquo;mysql-bin.010&rsquo;;
</br>PURGE BINARY LOGS BEFORE &lsquo;2008-04-02 22:46:26&rsquo;;</p>

<p>清空表并使自增归0
</br>TRUNCATE TABLE tablename</p>

<p>Mac无法登陆
</br>Can&rsquo;t connect to MySQL server on &lsquo;127.0.0.1&rsquo; (61)
</br>StevenMacBookAir:~ Hobo$ sudo su &ndash;
</br>StevenMacBookAir:~ root# nohup /usr/local/mysql/bin/mysqld_safe &amp;
</br>[1] 464
</br>StevenMacBookAir:~ root# appending output to nohup.out
</br>exit
</br>logout
</br>StevenMacBookAir:~ Hobo$</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Go-Revel:Gorp连接MySQL]]></title>
    <link href="http://blog.devhobo.com/blog/2013/08/24/go-revel-gorplian-jie-mysql/"/>
    <updated>2013-08-24T09:22:00+08:00</updated>
    <id>http://blog.devhobo.com/blog/2013/08/24/go-revel-gorplian-jie-mysql</id>
    <content type="html"><![CDATA[<p>Revel连接数据库可以参考官方的Booking示例</p>

<p>除了Revel需要Gorp和MySQL驱动两个库
{% codeblock lang:ruby %}</p>

<h1>Gorp</h1>

<p>go get github.com/coopernurse/gorp</p>

<h1>MySQL驱动</h1>

<p>go get github.com/go-sql-driver/mysql  #也可以用其他的驱动库
{% endcodeblock %}</p>

<p>创建一个新的Revel工程app_name</p>

<!--more-->


<p></p>

<p>配置conf/app.conf
{% codeblock 数据库配置 lang:ruby %}</p>

<h1>DB username:@tcp(yourhost:port)/dbname</h1>

<p>db.import = github.com/Go-SQL-Driver/mysql
db.driver = mysql
db.spec   = root:@tcp(localhost:3306)/db_name
{% endcodeblock %}</p>

<p>创建models/user.go，先只定义几个测试字段
{% codeblock user.go lang:ruby %}
package models</p>

<p>type Post struct {</p>

<pre><code>UserId                          int
Name                string
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>创建controllers/init.go
{% codeblock init.go lang:ruby %}
package controllers</p>

<p>import &ldquo;github.com/robfig/revel&rdquo;</p>

<p>func init() {</p>

<pre><code>revel.OnAppStart(Init)
revel.InterceptMethod((*GorpController).Begin, revel.BEFORE)
revel.InterceptMethod((*GorpController).Commit, revel.AFTER)
revel.InterceptMethod((*GorpController).Rollback, revel.FINALLY)
</code></pre>

<p>}
{% endcodeblock %}</p>

<p>创建controllers/gorp.go
{% codeblock gorp.go lang:ruby %}
package controllers</p>

<p>import (</p>

<pre><code>"database/sql"
"github.com/coopernurse/gorp"
_ "github.com/Go-SQL-Driver/mysql"
r "github.com/robfig/revel"
"github.com/robfig/revel/modules/db/app"
"app_name/app/models"
</code></pre>

<p>)</p>

<p>var (</p>

<pre><code>Dbm *gorp.DbMap
</code></pre>

<p>)</p>

<p>func Init() {</p>

<pre><code>db.Init()
//MySQL InnoDB UTF8
Dbm = &amp;gorp.DbMap{Db: db.Db, Dialect: gorp.MySQLDialect{"InnoDB", "UTF8"}}

setColumnSizes := func(t *gorp.TableMap, colSizes map[string]int) {
    for col, size := range colSizes {
        t.ColMap(col).MaxSize = size
    }
}

//创建一个User测试表
t := Dbm.AddTable(models.User{}).SetKeys(true, "UserId")
setColumnSizes(t, map[string]int{
    "Name": 20,
})

Dbm.TraceOn("[gorp]", r.INFO)
Dbm.CreateTables()

//插入一组测试数据
demoUser := &amp;models.User{0, "Hobo"}
if err := Dbm.Insert(demoUser); err != nil {
    panic(err)
}
</code></pre>

<p>}</p>

<p>type GorpController struct {</p>

<pre><code>*r.Controller
Txn *gorp.Transaction
</code></pre>

<p>}</p>

<p>func (c *GorpController) Begin() r.Result {</p>

<pre><code>txn, err := Dbm.Begin()
if err != nil {
    panic(err)
}
c.Txn = txn
return nil
</code></pre>

<p>}</p>

<p>func (c *GorpController) Commit() r.Result {</p>

<pre><code>if c.Txn == nil {
    return nil
}
if err := c.Txn.Commit(); err != nil &amp;&amp; err != sql.ErrTxDone {
    panic(err)
}
c.Txn = nil
return nil
</code></pre>

<p>}</p>

<p>func (c *GorpController) Rollback() r.Result {</p>

<pre><code>if c.Txn == nil {
    return nil
}
if err := c.Txn.Rollback(); err != nil &amp;&amp; err != sql.ErrTxDone {
    panic(err)
}
c.Txn = nil
return nil
</code></pre>

<p>}</p>

<p>{% endcodeblock %}</p>

<p>修改controllers/app.go
{% codeblock 修改app.go lang:ruby %}</p>

<h1>import添加</h1>

<pre><code>"app_name/app/models"
</code></pre>

<h1>包含GorpController</h1>

<p>type App struct {</p>

<pre><code>GorpController
</code></pre>

<p>}</p>

<h1>测试查询</h1>

<p>func (c App) Index() revel.Result {</p>

<pre><code>greeting := "It works!"
</code></pre>

<p>  users, err := c.Txn.Select(models.User{}, <code>select * from user where Name="Hobo"</code>)
  if len(users) == 0 {</p>

<pre><code>greeting = "Null"
</code></pre>

<p>  } else {</p>

<pre><code>user := users[0].(*models.User)
greeting = user.Name
</code></pre>

<p>  }
  if err != nil {</p>

<pre><code>panic(err)
</code></pre>

<p>  }</p>

<pre><code>return c.Render(greeting)
</code></pre>

<p>}</p>

<p>{% endcodeblock %}</p>

<p>修改views/App/Index.html
{% codeblock lang:ruby %}</p>

<h1><h1>It works</h1></h1>

<h1>/{/{.greeting/}/}</h1>


<p>      #去掉反斜杠
{% endcodeblock %}</p>

<p>运行测试下
{% codeblock lang:ruby %}
go run app_name
{% endcodeblock %}</p>
]]></content>
  </entry>
  
</feed>
